import { Button } from "@chakra-ui/button";
import ReactWaves from "@dschoon/react-waves";
import type { NextPage } from "next";
// import Head from 'next/head'
// import Image from 'next/image'
import { useEffect, useState } from "react";
import useSWR, { SWRResponse } from "swr";
import SignUpFormComponent from "../components/Auth/SignupForm";
import ReleaseCard from "../components/ReleaseCard/ReleaseCard";
import { Release } from "../entities/entities";
import styles from "../styles/Home.module.css";
import fetcher from "../utils/fetcher";
import Userfront from "@userfront/react";
import SignInFormComponent from "../components/Auth/SignInForm";

const Home: NextPage = () => {
  // const playOrPause=()=>{
  //     console.log(Tab.);

  // }

  const playorpause = () => {
    console.log("playorpause");
  };

  const setAudiohehe = (x) => {
    console.log(x);

    setisPlaying(true);
    setAudio(x);
  };

  const [audio, setAudio] = useState(null);
  const [isPlaying, setisPlaying] = useState(false);
  const { data, error }: SWRResponse<Release[], any> = useSWR(
    `${process.env.NEXT_PUBLIC_API_ENDPOINT}/releases`,
    fetcher
  );

  const accessToken = Userfront.accessToken();

  useEffect(() => {
    console.log(accessToken);
  }, [accessToken]);
  
  useEffect(() => {
    console.log(data);
  }, [data, error]);

  if (!Userfront.user.userId) {
    return (
      <div>
        <SignInFormComponent/>
      </div>
    )
  }

  if (error) return <div>failed to load</div>;
  if (!data) return <div>loading...</div>;

  // render data
  return (
    <>
      {data.map((release) => (
        <ReleaseCard key={release.id} release={release} />
      ))}
    </>
  );
};

export default Home;

// const Home: NextPage = () => {
//   return (
//     <div className={styles.container}>
//       <Head>
//         <title>Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>

//       <main className={styles.main}>
//         <h1 className={styles.title}>
//           Welcome to <a href="https://nextjs.org">Next.js!</a>
//         </h1>

//         <p className={styles.description}>
//           Get started by editing{' '}
//           <code className={styles.code}>pages/index.js</code>
//         </p>

//         <div className={styles.grid}>
//           <a href="https://nextjs.org/docs" className={styles.card}>
//             <h2>Documentation &rarr;</h2>
//             <p>Find in-depth information about Next.js features and API.</p>
//           </a>

//           <a href="https://nextjs.org/learn" className={styles.card}>
//             <h2>Learn &rarr;</h2>
//             <p>Learn about Next.js in an interactive course with quizzes!</p>
//           </a>

//           <a
//             href="https://github.com/vercel/next.js/tree/master/examples"
//             className={styles.card}
//           >
//             <h2>Examples &rarr;</h2>
//             <p>Discover and deploy boilerplate example Next.js projects.</p>
//           </a>

//           <a
//             href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             className={styles.card}
//           >
//             <h2>Deploy &rarr;</h2>
//             <p>
//               Instantly deploy your Next.js site to a public URL with Vercel.
//             </p>
//           </a>
//         </div>
//       </main>

//       <footer className={styles.footer}>
//         <a
//           href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//           target="_blank"
//           rel="noopener noreferrer"
//         >
//           Powered by{' '}
//           <span className={styles.logo}>
//             <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
//           </span>
//         </a>
//       </footer>
//     </div>
//   )
// }

// export default Home

// {/* <Button
// onClick={playOrPause}>
//     play</Button> */}
//     {audio &&<ReactWaves
//         audioFile={audio}
//         options={{
//           barHeight: 2,
//           cursorWidth: 1,
//           height: 25,
//           hideScrollbar: true,
//           progressColor: '#adff2f',
//           responsive: true,
//           // waveColor: greyyyyyyy,
//         }}
//         onReady = {()=>{
//           playorpause()
//         }}
//         volume={1}
//         zoom={1}
//         playing={true}
//       />}
